{"version":3,"sources":["components/AddForm.js","components/Header.js","components/List.js","components/Notification.js","components/Search.js","services/person.js","App.js","index.js"],"names":["AddForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","Header","title","List","showPersons","deletePerson","map","person","name","number","onClick","id","Notification","message","success","className","error","Search","search","handleSearch","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","notification","setNotification","filter","toLowerCase","includes","useEffect","personService","event","target","preventDefault","personObject","find","window","confirm","setTimeout","catch","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa93d9bd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AddForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => (\r\n    <form onSubmit={addPerson}>\r\n    <div>Name: <input value={newName} onChange={handleNameChange} /></div>\r\n    <div>Number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n    <div><button>Add</button></div>\r\n  </form>\r\n)\r\n\r\nexport default AddForm","import React from 'react'\r\n\r\nconst Header = ({ title }) => (\r\n    <h2>{title}</h2>\r\n)\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst List = ({ showPersons, deletePerson }) => (\r\n    <ul>\r\n    {showPersons.map(person =>\r\n      <li key={person.id}>{person.name} {person.number} <button onClick={() => deletePerson(person.id)}>Delete</button></li>\r\n    )}\r\n  </ul>\r\n)\r\n\r\nexport default List","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if (message.success) {\r\n    return (\r\n      <div className=\"success\">\r\n        {message.success}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (message.error) {\r\n    return (\r\n      <div className=\"error\">\r\n        {message.error}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Search = ({ search, handleSearch }) => (\r\n    <div>Search: <input value={search} onChange={handleSearch} /></div>\r\n)\r\n\r\nexport default Search","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n};\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useEffect, useState } from 'react'\nimport AddForm from './components/AddForm'\nimport Header from './components/Header'\nimport List from './components/List'\nimport Notification from './components/Notification'\nimport Search from './components/Search'\nimport personService from './services/person'\n\nconst App = () => {\n  const [persons, setPersons] = useState(null)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  const showPersons = search ? persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase())) : persons\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    const person = persons.find(person => person.name.toLowerCase().includes(newName.toLowerCase()))\n\n    if (!person) {\n      personService\n        .create(personObject)\n        .then(response => {\n          setNotification({ success: `${newName} was added to the server` })\n          setPersons(response)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    } else {\n      if (window.confirm(newName + ' is already added to phonebook, replace the old number with the new one?')) {\n        const id = person.id\n        personService.update(id, personObject).then(response => {\n          setNotification({ success: `Updated ${person.name}!`})\n          setPersons(persons.map(person => person.id !== id ? person : response))\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        }).catch(() => {\n          setNotification({ error: `${person.name} was already removed from server` })\n          setPersons(persons.filter(person => person.id !== id))\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n      } else {\n        console.log(\"cancel update\")\n      }\n    }\n  }\n\n  const deletePerson = (id) => {\n    if (window.confirm(\"Do you really want to delete\")) {\n      personService\n        .deletePerson(id)\n        .then(() => {\n          setNotification({ success: `Removed user from the server` })\n          setPersons(persons.filter(person => person.id !== id))\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        }).catch(() => {\n          setNotification({ error: `User was already removed from server` })\n          setPersons(persons.filter(person => person.id !== id))\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    } else {\n      console.log(\"cancel delete\")\n    }\n  }\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  return (\n    <div>\n      <Notification message={notification} />\n      <Header title={\"Phonebook\"} />\n      <Search search={search} handleSearch={handleSearch} />\n      <Header title={\"Add new\"} />\n      <AddForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <Header title={\"Numbers\"} />\n      {persons ?\n        <List showPersons={showPersons} deletePerson={deletePerson} />\n        : <p>Loading...</p>}\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}